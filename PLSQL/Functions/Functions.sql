------------------------------------------------------ Función para calcular el saldo actual de una cuenta de cobro
CREATE OR REPLACE FUNCTION FU_CALC_V_ACTUAL (
    PK_CONJUNTO IN CONJUNTO.COD_CONJUNTO%TYPE,
    PK_BLOQUE IN APARTAMENTO.COD_BLOQUE%TYPE,
    PK_APTO IN APARTAMENTO.COD_APARTAMENTO%TYPE,
    PN_MES IN CUENTA_COBRO.PERIODO_MES_CUENTA%TYPE,
    PN_ANIO IN CUENTA_COBRO.PERIODO_ANIO_CUENTA%TYPE
) RETURN CUENTA_COBRO.SALDO_ACTUAL%TYPE AS
    LS_ACTUAL CUENTA_COBRO.SALDO_ACTUAL%TYPE;
BEGIN
    SELECT
        SALDO_ACTUAL INTO LS_ACTUAL
    FROM
        CUENTA_COBRO
    WHERE
        PERIODO_MES_CUENTA = PN_MES
        AND PERIODO_ANIO_CUENTA = PN_ANIO
        AND COD_CONJUNTO = PK_CONJUNTO
        AND COD_BLOQUE = PK_BLOQUE
        AND COD_APARTAMENTO = PK_APTO;
    RETURN LS_ACTUAL;
EXCEPTION
    WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20001, 'FU_CALC_V_ACTUAL Ha ocurrido un error: '
            || SQLCODE
            || SQLERRM);
END FU_CALC_V_ACTUAL;
/

------------------------------------------------------ Función para calcular el saldo pendiente de una cuenta de cobro
CREATE OR REPLACE FUNCTION FU_CALC_V_PENDIENTE (
    PK_CONJUNTO IN CONJUNTO.COD_CONJUNTO%TYPE,
    PK_BLOQUE IN APARTAMENTO.COD_BLOQUE%TYPE,
    PK_APTO IN APARTAMENTO.COD_APARTAMENTO%TYPE,
    PN_MES IN CUENTA_COBRO.PERIODO_MES_CUENTA%TYPE,
    PN_ANIO IN CUENTA_COBRO.PERIODO_ANIO_CUENTA%TYPE
) RETURN CUENTA_COBRO.SALDO_PENDIENTE%TYPE AS
    LS_PENDIENTE CUENTA_COBRO.SALDO_PENDIENTE%TYPE;
BEGIN
    SELECT
        SALDO_PENDIENTE INTO LS_PENDIENTE
    FROM
        CUENTA_COBRO
    WHERE
        PERIODO_MES_CUENTA = PN_MES
        AND PERIODO_ANIO_CUENTA = PN_ANIO
        AND COD_CONJUNTO = PK_CONJUNTO
        AND COD_BLOQUE = PK_BLOQUE
        AND COD_APARTAMENTO = PK_APTO;
    RETURN LS_PENDIENTE;
EXCEPTION
    WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20001, 'FU_CALC_V_PENDIENTE Ha ocurrido un error: '
            || SQLCODE
            || SQLERRM);
END FU_CALC_V_PENDIENTE;
/